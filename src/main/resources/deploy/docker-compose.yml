services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
    restart: always


  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  redis-server:
    image: redis:latest
    command: ["redis-server", "--appendonly", "yes"]
    restart: always


  db-postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=UTC
    ports:
      - "5434:5432"
    volumes:
      - db-postgres-data:/var/lib/postgresql/data
      - ./db-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always



  crawler_core:
    build: ./crawler_core
    ports:
      - "9080:8080"
    depends_on:
      - db-postgres
      - kafka
      - redis-server
    environment:
      - SPRING_PROFILE_ACTIVE=prod
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - POSTGRES_DB_HOST=db-postgres
      - POSTGRES_DB_NAME=${POSTGRES_DB}
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}  # 추가
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # 추가

      - FIXED_DELAY_EXPRESSION_CRAWLING=${FIXED_DELAY_EXPRESSION_CRAWLING}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      - KAKAO_LOGOUT_REDIRECT_URI=${KAKAO_LOGOUT_REDIRECT_URI}

    volumes:
      - db-postgres-data:/var/lib/postgresql/data
      - ./db-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
      
  member:
    build: ./member
    ports:
      - "9081:8080"
    depends_on:
      - db-postgres
      - kafka
      - redis-server
    environment:
      - SPRING_PROFILE_ACTIVE=prod
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      - KAKAO_LOGOUT_REDIRECT_URI=${KAKAO_LOGOUT_REDIRECT_URI}
      - POSTGRES_DB_HOST=db-postgres
      - POSTGRES_DB_NAME=${POSTGRES_DB}
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}  # 추가
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # 추가
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_BOOTSTRAP_SERVERS_PORT=${KAFKA_BOOTSTRAP_SERVERS_PORT}
      # - REDIS_HOST=${REDIS_HOST}
      # - REDIS_PORT=${REDIS_PORT}
    volumes:
      - db-postgres-data:/var/lib/postgresql/data
      - ./db-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
      
  telegram-bot:
    build: ./telegram-bot
    ports:
      - "9082:8080"
    depends_on:
      - db-postgres
      - kafka
      - redis-server
    environment:
      - SPRING_PROFILE_ACTIVE=prod
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      
      - POSTGRES_DB_HOST=db-postgres
      - POSTGRES_DB_NAME=${POSTGRES_DB}
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}  # 추가
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # 추가

      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_BOOTSTRAP_SERVERS_PORT=${KAFKA_BOOTSTRAP_SERVERS_PORT}

    volumes:
      - db-postgres-data:/var/lib/postgresql/data
      - ./db-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  message_publisher:
    build: ./message_publisher
    ports:
      - "9083:8080"
    depends_on:
      - db-postgres
      - kafka
      - redis-server
      - telegram-bot
      - member
      - crawler_core
    environment:
      - SPRING_PROFILE_ACTIVE=prod
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      - POSTGRES_DB_HOST=db-postgres
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - POSTGRES_DB_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}  # 추가
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # 추가
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_BOOTSTRAP_SERVERS_PORT=${KAFKA_BOOTSTRAP_SERVERS_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - CRON_EXPRESSION=${CRON_EXPRESSION}
    volumes:
      - db-postgres-data:/var/lib/postgresql/data
      - ./db-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

volumes:
  db-postgres-data: